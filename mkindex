#!/usr/bin/env python3
# index.py
# 2020-07-15
# manontanto

dbname = 'index.db'
dbid = '202007150900'
ExPage = 99

import sqlite3
import click
import sys
<<<<<<< HEAD
import os

def checkdb():
    if not os.path.isfile(dbname):
        print('\033[31m' + 'No index.db.' + '\033[0m')
        sys.exit()
    conn = sqlite3.connect(dbname)
    cursor = conn.cursor()
    cursor.execute('select id from id;')
    row = cursor.fetchone()
    if row[0] == dbid:
        return
    else:
        print('\033[31mNo database for me.\033[0m')
        sys.exit()

def record_word():
    def write2db(w, p, r):
        conn = sqlite3.connect(dbname)
        cursor = conn.cursor()
        try:
            cursor.execute('''
                    INSERT INTO list VALUES(null,'{}',{},'{}');
                    '''.format(w, p, r))
            conn.commit()
            print('\033[36m' +'登録' + '\033[0m')
        except sqlite3.Error as e:
            print('sqlite3.Error occurred:', e.args[0])

    def input_word():
        global ExPage
        word = input('word: ')
        if word == 'q':
            return
        pPage = ExPage
        page = click.prompt('page: ', default=pPage)
        ExPage = page
#        page = input('page: ')
        rem  = input('rem : ')
        write2db(word, page, rem)
        input_word()

    input_word()

def delete_word_by_id():
    def delFromDb(d):
        conn = sqlite3.connect(dbname)
        cursor = conn.cursor()
        sql ='SELECT * FROM list WHERE id = {};'.format(d)
        cursor.execute(sql)
        row = cursor.fetchone()
        print(row)
        ans = input('Delete this record. OK?[y/N] :')
        if ans.lower() in {'y', 'yes'}:
            try:
                cursor.execute('DELETE FROM list WHERE id = {};'.format(d))
                conn.commit()
                print('1件削除')
            except sqlite3.Error as e:
                print('sqlite3.Error occurred:', e.args[0])

    r = input('Delete ID: ')
    if r == 'q':
        return
    delFromDb(r)

def ljust(string, length):
    count_length = 0
    for char in string:
        if ord(char) <= 255:
            count_length += 1
        else:
            count_length += 2
    return string + (length-count_length) * ' '

def print_db(d, w):
    (id, word, page, rem) = d
    (id_width, page_width, word_width, rem_width) = w
    print(str(id).rjust(id_width), str(page).rjust(page_width), ljust(word, word_width), ljust(rem, rem_width))

def print_dbtitle(w):
    (id_width, page_width, word_width, rem_width) = w
    print('id'.rjust(id_width), 'page'.rjust(page_width), ljust('語彙', word_width), ljust('備考', rem_width))

def select_sql_by_word():
#    w = click.prompt('Search word ', default='All')
    w = input('Search word: ')
    conn = sqlite3.connect(dbname)
    cursor = conn.cursor()
    sql = 'SELECT * FROM list WHERE WORD LIKE "%{}%";'.format(w)
    width = (4, 4, 30, 30)
    print_dbtitle(width)
    for row in cursor.execute(sql):
        print_db(row, width)

def select_job():
    stat_db()
    job = input('登録(r), 削除(d), 検索(s): ')
    if job not in {'r', 'd', 's', 'q'}:
        select_job()
    if job == 'r':
        ExPage = 99
        record_word()
    elif job == 'd':
        delete_word_by_id()
    elif job == 's':
        select_sql_by_word()
    elif job == 'q':
        sys.exit()
    select_job()

def stat_db():
    print('DB Status: ', end='')
    conn = sqlite3.connect(dbname)
    cursor = conn.cursor()
    sql = 'SELECT COUNT(*) FROM list'
    try:
        cursor.execute(sql)
        c = cursor.fetchone()
        print('現在の登録件数 = {}'.format(c[0]))
    except sqlite3.Error as e:
        print('sqlite3.Error occurred:', e.args[0])

if __name__ == '__main__':
    checkdb()
    select_job()

