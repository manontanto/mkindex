#!/usr/bin/env python3
#
# mkindex
#
'''
------------
 id  page  word
  4   24   avoir - comment
------------

'''
import sqlite3
import click
import sys
import os
from datetime import datetime

DBNAME = 'index.db'
DBID = 'XXXXX'
LOGPATH = 'YYYYY'
ExPage = 999


def createdb():
    conn = sqlite3.connect(DBNAME)
    c = conn.cursor()

    c.execute('CREATE TABLE id (id TEXT NOT NULL);')
    c.execute('INSERT INTO id VALUES("{}");'.format(dbid))
    ddl = '''
         CREATE TABLE list (
         id INTEGER PRIMARY KEY AUTOINCREMENT,
         word TEXT NOT NULL,
         page INTEGER NOT NULL);
    '''
    c.execute(ddl)

    conn.commit()
    conn.close()    

def checkdbid():
    if not os.path.isfile(DBNAME):
        print('\033[31m' + 'No ' + dbname  + ' found.' + '\033[0m')
        print('Create it.')
        createdb()
    conn = sqlite3.connect(DBNAME)
    cursor = conn.cursor()
    cursor.execute('select id from id;')
    row = cursor.fetchone()
    if row[0] == dbid:
        return
    else:
        sys.exit('\033[31mNo database for me.\033[0m')

def record_word():
    def write2db(w, p):
        conn = sqlite3.connect(DBNAME)
        cursor = conn.cursor()
        try:
            cursor.execute('''
                    INSERT INTO list VALUES(null,"{}","{}");
                    '''.format(w, p))
            conn.commit()
            print('\033[36m' +'登録' + '\033[0m')
        except sqlite3.Error as e:
            print('sqlite3.Error occurred:', e.args[0])

    def input_word():
        global ExPage

        print("\n検索(s) 終了(q)")
        word = myinput('word: ')
        if word == '':
            return
        if word.strip().lower() == 'q':
            return
        if word.strip().lower() == 's':
            select_sql_by_word()
            input_word()
            return
        pPage = ExPage
        page = click.prompt('page: ', default=pPage)
        ExPage = page
        write2db(word, page)
        input_word()

    input_word()

def delete_word_by_id():
    def delFromDb(d):
        conn = sqlite3.connect(DBNAME)
        cursor = conn.cursor()
        sql ='SELECT * FROM list WHERE id = {};'.format(d)
        cursor.execute(sql)
        row = cursor.fetchone()
        print(row)
        ans = myinput('Delete this record. OK?[y/N] :')
        if ans.lower() in {'y', 'yes'}:
            try:
                cursor.execute('DELETE FROM list WHERE id = {};'.format(d))
                conn.commit()
                print('1件削除')
            except sqlite3.Error as e:
                print('sqlite3.Error occurred:', e.args[0])

    r = myinput('Delete ID: ')
    if r == 'q':
        return
    delFromDb(r)

def ljust(string, length):
    count_length = 0
    for char in string:
        if ord(char) <= 255:
            count_length += 1
        else:
            count_length += 2
    return string + (length-count_length) * ' '

def print_db(d, f):
    print("{0[0]:>4} {0[2]:>4}   {0[1]}".format(d))
    f.write("{0[0]:>4} {0[2]:>4}   {0[1]}\n".format(d))

def select_sql_by_word():
    w = myinput('Search word|id|q: ')
    if w.isdecimal():
        sql_str = 'SELECT * FROM list WHERE id={0};'
    elif w == ('q' or 'ｑ'):
        return
    else:
        sql_str = 'SELECT * FROM list WHERE word LIKE "%{0}%";'

    conn = sqlite3.connect(DBNAME)
    cursor = conn.cursor()
    sql = sql_str.format(w)
    cursor.execute(sql)
    hits = cursor.fetchall()
    if len(hits) == 0:
        print()
        print(f'No data for {w}.')
        print()
    else:
        print("-------------------")
        print("  id  page  word")
        print("-------------------")
        with open(LOGPATH, "w", encoding="utf-8") as f:
            for row in hits:
                print_db(row, f)

    select_sql_by_word()

def edit_word_by_id():
    def updatedb(j, nd):
        conn = sqlite3.connect(DBNAME)
        cursor = conn.cursor()
        sql = 'UPDATE list set {}="{}" where id={};'.format(col.get(j),nd,id)
        cursor.execute(sql)
        conn.commit()
        return

    def editWord():
        conn = sqlite3.connect(DBNAME)
        cursor = conn.cursor()
        sql = 'SELECT * FROM list WHERE id = {};'.format(id)
        cursor.execute(sql)
        row = cursor.fetchone()
        print(row)
        while True:
            job = myinput('語彙(w), ページ(p), 終了(q): ')
            if job in {'w', 'p', 'q'}:
                break
        if job == 'q':
            return
        newdata = myinput(str(row[list(col.keys()).index(job) + 1]) + ' : ')
        if newdata == 'q':
            return
        updatedb(job, newdata)
        editWord()

    col = { 'w':'word', 'p':'page'}
    print("\n検索(s) 終了(q)")
    while True:
        id = myinput('id: ')
        if id == 'q':
            return
        if id == 's':
            select_sql_by_word()
            edit_word_by_id()
            return
        try:
            d = int(id)
        except ValueError:
            continue
        editWord()

def myinput(s):
    try:
        r = input(s)
    except KeyboardInterrupt:
        sys.exit('\n')
    return r

def select_job():
    stat_db()
    while True:
        job = myinput('登録(r), 削除(d), 検索(s), 編集(m), 終了(q): ')
        if job in {'r', 'd', 's', 'm', 'q'}:
            break
    if job == 'r':
        record_word()
    elif job == 'd':
        delete_word_by_id()
    elif job == 's':
        select_sql_by_word()
    elif job == 'm':
        edit_word_by_id()
    elif job == 'q':
        sys.exit()
    select_job()

def stat_db():
    print('\nDB Status: ', end='')
    conn = sqlite3.connect(DBNAME)
    cursor = conn.cursor()
    sql = 'SELECT COUNT(*) FROM list'
    try:
        cursor.execute(sql)
        c = cursor.fetchone()
        print('現在の登録件数 = {}'.format(c[0]))
    except sqlite3.Error as e:
        print('sqlite3.Error occurred:', e.args[0])

if __name__ == '__main__':
    checkdbid()
    select_job()

